name: Auto Review & Fix

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-review:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.COPILOT_TOKEN }}
      
      - name: Install GitHub CLI Copilot extension
        env:
          GH_TOKEN: ${{ secrets.COPILOT_TOKEN }}
        run: |
          gh extension install github/gh-copilot || true
          gh auth status
      
      - name: Review & Fix Loop
        env:
          GH_TOKEN: ${{ secrets.COPILOT_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          MAX_ITERATIONS=3
          ITERATION=0
          
          while [ $ITERATION -lt $MAX_ITERATIONS ]; do
            echo "🔄 Iteration $((ITERATION + 1))/$MAX_ITERATIONS"
            
            # Request Copilot review
            echo "📝 Requesting Copilot review..."
            gh pr review $PR_NUMBER --comment -b "🤖 @copilot, please review this PR for critical issues, bugs, security concerns, or improvements."
            
            # Wait for review
            sleep 20
            
            # Get latest review comments
            REVIEWS=$(gh pr view $PR_NUMBER --json reviews --jq '.reviews[-1].body' 2>/dev/null || echo "")
            
            if [ -z "$REVIEWS" ] || [ "$REVIEWS" = "null" ]; then
              echo "✅ No review comments found - assuming no critical issues"
              gh pr comment $PR_NUMBER --body "✅ **Otomatik review tamamlandı!** Copilot incelemesi yapıldı, kritik sorun bulunamadı. PR'ı merge edebilirsiniz. 🚀"
              exit 0
            fi
            
            # Check for critical issues using basic keyword search
            if echo "$REVIEWS" | grep -iE "(critical|error|bug|security|vulnerability|must fix|blocker)" > /dev/null; then
              echo "⚠️ Critical issues detected in review"
              
              # Note: Actual auto-fix would require Copilot API integration
              # For now, just notify
              gh pr comment $PR_NUMBER --body "⚠️ **Kritik sorunlar tespit edildi!**
              
Copilot review'da kritik sorunlar bulundu. Lütfen review yorumlarını kontrol edip gerekli düzeltmeleri yapın.

**İterasyon:** $((ITERATION + 1))/$MAX_ITERATIONS"
              
              # In a full implementation, this is where we'd use Copilot to fix issues
              # For now, we'll just wait for manual fixes
              ITERATION=$((ITERATION + 1))
              
              if [ $ITERATION -lt $MAX_ITERATIONS ]; then
                echo "Waiting for fixes..."
                sleep 60
              fi
            else
              echo "✅ No critical keywords found in review"
              gh pr comment $PR_NUMBER --body "✅ **Otomatik review tamamlandı!** Copilot incelemesi yapıldı, kritik sorun bulunamadı. PR'ı merge edebilirsiniz. 🚀"
              exit 0
            fi
          done
          
          # Max iterations reached
          echo "⚠️ Max iterations reached"
          gh pr comment $PR_NUMBER --body "⚠️ **Review döngüsü tamamlandı** - $MAX_ITERATIONS iterasyon sonunda bazı sorunlar hala mevcut olabilir. Manuel kontrol gerekli."
