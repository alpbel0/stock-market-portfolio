

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    depends_on:
      - db
      - redis
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - internal

  frontend:
    image: ghcr.io/cirruslabs/flutter:3.19.6
    working_dir: /app
    entrypoint: ["/bin/bash", "-lc"]
    command: >
      flutter pub get &&
      flutter run -d web-server --web-hostname 0.0.0.0 --web-port 8080
    environment:
      API_BASE_URL: ${API_BASE_URL:-/api}
    volumes:
      - ./frontend:/app
      - flutter_pub_cache:/root/.pub-cache
    depends_on:
      - backend
    expose:
      - "8080"
    ports:
      - "8081:8080" 
    networks:
      - internal

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-portfolio}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-portfolio}
      POSTGRES_DB: ${POSTGRES_DB:-portfolio}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-portfolio} -d ${POSTGRES_DB:-portfolio}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - internal

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - internal

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${NGINX_PORT:-8080}:80"
    networks:
      - internal
      - public

  prometheus:
    image: prom/prometheus:v2.48.0
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    depends_on:
      - backend
    networks:
      - internal

volumes:
  postgres_data:
  redis_data:
  flutter_pub_cache:

networks:
  internal:
  public:
